CREATE TABLE [auth].[ROLE_PERMISSIONS](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RoleID] [int] NOT NULL,
	[ActionCode] [varchar](50) NOT NULL,
	[CategoryCode] [varchar](50) NOT NULL,
	[Created] [datetime] NOT NULL,
        [CreateUser] [varchar](50) NOT NULL,
        [Updated] [datetime] NOT NULL,
        [UpdateUser] [varchar](50) NOT NULL,
  CONSTRAINT [PK_ROLES_PERMISSIONS] PRIMARY KEY CLUSTERED ([ID] ASC)
    WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
  CONSTRAINT [UK_ROLE_PERMISSIONS_RoleID_ActionCode_CategoryCode] UNIQUE NONCLUSTERED ([RoleID] ASC,[ActionCode] ASC,[CategoryCode] ASC)
    WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY];
ALTER TABLE [auth].[ROLE_PERMISSIONS] ADD  CONSTRAINT [DF_ROLES_PERMISSIONS_Created]  DEFAULT (getdate()) FOR [Created];
ALTER TABLE [auth].[ROLE_PERMISSIONS] ADD  CONSTRAINT [DF_ROLES_PERMISSIONS_CreateUser]  DEFAULT ('ROOT') FOR [CreateUser];
ALTER TABLE [auth].[ROLE_PERMISSIONS] ADD  CONSTRAINT [DF_ROLES_PERMISSIONS_Updated]  DEFAULT (getdate()) FOR [Updated];
ALTER TABLE [auth].[ROLE_PERMISSIONS] ADD  CONSTRAINT [DF_ROLES_PERMISSIONS_UpdateUser]  DEFAULT ('ROOT') FOR [UpdateUser];
ALTER TABLE [auth].[ROLE_PERMISSIONS] WITH CHECK ADD CONSTRAINT [FK_ROLE_PERMISSIONS_RoleID] FOREIGN KEY([RoleID])
REFERENCES [auth].[ROLES] ([ID]);
ALTER TABLE [auth].[ROLE_PERMISSIONS] CHECK CONSTRAINT [FK_ROLE_PERMISSIONS_RoleID];

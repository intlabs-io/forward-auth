package http

import (
	"net/http"

	fa "bitbucket.org/_metalogic_/forward-auth"
	_ "bitbucket.org/_metalogic_/forward-auth/docs" // docs is generated by Swag CLI, you have to import it.
	httpSwagger "bitbucket.org/_metalogic_/httptreemux-swagger"
	"github.com/dimfeld/httptreemux/v5"
)

// Handler ...
type Handler struct {
	service fa.Service
	handler *httptreemux.TreeMux
}

// ServeHTTP serves requests against the forward-auth API.
func (h *Handler) ServeHTTP(addr string) error {
	return http.ListenAndServe(addr, h.handler)
}

// NewHandler returns a new Handler for the servicej
func NewHandler(svc fa.Service, userHeader, traceHeader string) *Handler {
	return &Handler{service: svc, handler: router(svc, userHeader, traceHeader)}
}

// create the router for Service
func router(svc fa.Service, userHeader, traceHeader string) *httptreemux.TreeMux {
	// initialize HTTP router
	treemux := httptreemux.New()
	api := treemux.NewGroup("/")
	// Common endpoints
	api.GET("/health", Health(svc))
	api.GET("/info", APIInfo(svc))
	api.GET("/stats", Stats(svc))
	// Admin endpoints
	api.GET("/admin/loglevel", LogLevel(svc))
	api.PUT("/admin/loglevel/:verbosity", SetLogLevel(svc))
	api.GET("/admin/run", RunMode(svc))
	api.PUT("/admin/run/:mode", SetRunMode(svc))
	api.GET("/admin/tree", Tree(svc))
	api.GET("/openapi/*", httpSwagger.Handler(
		httpSwagger.URL("doc.json"), // The url pointing to API definition
		httpSwagger.DeepLinking(true),
		httpSwagger.DocExpansion("none"),
		httpSwagger.DomID("#swagger-ui")))
	// Auth endpoints
	api.GET("/auth", Auth(svc, userHeader, traceHeader))
	api.GET("/block", Blocked(svc))
	api.POST("/block/:userGUID", Block(svc))
	api.DELETE("/block/:userGUID", Unblock(svc))
	api.GET("/rules", HostChecks(svc))
	return treemux
}

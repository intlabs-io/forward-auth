{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/forward-auth/v1/admin/loglevel": {
            "get": {
                "description": "gets the service log level (one of Trace, Debug, Info, Warn or Error)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin endpoints"
                ],
                "summary": "gets the current service log level",
                "operationId": "get-loglevel",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "dynamically sets the service log level to one of Trace, Debug, Info, Warn or Error",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin endpoints"
                ],
                "summary": "sets the service log level",
                "operationId": "set-loglevel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Log Level",
                        "name": "verbosity",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/forward-auth/v1/auth": {
            "get": {
                "description": "authorizes a request based on configured access control rules;\njwtHeader, traceHeader and userHeader are added to the forwarded request headers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth endpoints"
                ],
                "summary": "authorizes a request based on configured access control rules",
                "operationId": "get-auth",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "forces an auth update from a store (invoked via broadcast from /reload)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth endpoints"
                ],
                "summary": "forces an auth update from a store",
                "operationId": "update-auth",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/forward-auth/v1/health": {
            "get": {
                "description": "checks health of forward-auth service, currently uses a database ping",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Common endpoints"
                ],
                "summary": "check health of forward-auth service",
                "operationId": "get-health",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/forward-auth/v1/hostgroups": {
            "get": {
                "description": "creates a new host group in an access control system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ACS endpoints"
                ],
                "summary": "creates a new host group in an access control system",
                "operationId": "create-hostgroup",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "returns the defined host groups in an access control system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ACS endpoints"
                ],
                "summary": "returns the defined host groups in an access control system",
                "operationId": "get-hostgroups",
                "parameters": [
                    {
                        "description": "host group",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/fauth.HostGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/forward-auth/v1/stats": {
            "get": {
                "description": "get forward-auth service statistics, currently database stats only",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Common endpoints"
                ],
                "summary": "get forward-auth service statistics",
                "operationId": "get-stats",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/fauth.Stats"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/info": {
            "get": {
                "description": "get forward-auth service info, including version, log level",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Common endpoints"
                ],
                "summary": "get forward-auth service info",
                "operationId": "get-info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/build.Runtime"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "build.BuildInfo": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "dependencies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dirtyBuild": {
                    "type": "boolean"
                },
                "goVersion": {
                    "type": "string"
                },
                "lastCommit": {
                    "type": "string"
                },
                "project": {
                    "type": "string"
                },
                "revision": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "build.Runtime": {
            "type": "object",
            "properties": {
                "buildInfo": {
                    "$ref": "#/definitions/build.BuildInfo"
                },
                "logLevel": {
                    "type": "string"
                },
                "serviceInfo": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "fauth.Check": {
            "type": "object",
            "properties": {
                "base": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "paths": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/fauth.Path"
                    }
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "fauth.HostGroup": {
            "type": "object",
            "properties": {
                "checks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/fauth.Check"
                    }
                },
                "default": {
                    "description": "\"allow\" or \"deny\" (define in pat?)",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "fauth.Path": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string"
                },
                "rules": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/fauth.Rule"
                    }
                }
            }
        },
        "fauth.Rule": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "expression": {
                    "type": "string"
                }
            }
        },
        "fauth.Stats": {
            "type": "object"
        },
        "http.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "types.Message": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}
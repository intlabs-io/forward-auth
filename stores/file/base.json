{
  "applications": [
    {
      "name": "Forward Auth Management Console Web Application",
      "bearer": {
        "source": "env",
        "name": "FORWARD_AUTH_CONSOLE_APP_KEY",
        "optional": true
      }
    }
  ],
  "tenants": [],
  "authorization": {
    "hostGroups": [
      {
        "name": "No Auth Application Hosts",
        "hosts": [
          "traefik.localhost"
        ],
        "default": "allow"
      },
      {
        "name": "Authorization Host",
        "hosts": [
          "{{.Host}}"
        ],
        "default": "deny",
        "checks": [
          {
            "name": "forward-auth",
            "base": "",
            "paths": [
              {
                "path": "/health",
                "rules": {
                  "GET": {
                    "description": "get API health",
                    "expression": "true"
                  }
                }
              },
              {
                "path": "/info",
                "rules": {
                  "GET": {
                    "description": "get API info",
                    "expression": "bearer('ROOT_KEY')"
                  }
                }
              },
              {
                "path": "/openapi/:any",
                "rules": {
                  "GET": {
                    "description": "get Swagger API documentation",
                    "expression": "bearer('ROOT_KEY')"
                  }
                }
              },
              {
                "path": "/admin/loglevel",
                "rules": {
                  "GET": {
                    "description": "get API log level",
                    "expression": "bearer('ROOT_KEY')"
                  }
                }
              },
              {
                "path": "/admin/loglevel/:level",
                "rules": {
                  "PUT": {
                    "description": "set API log level",
                    "expression": "bearer('ROOT_KEY')"
                  }
                }
              },
              {
                "path": "/login",
                "rules": {
                  "POST": {
                    "description": "execute a tenant login through access-apis",
                    "expression": "true"
                  }
                }
              },
              {
                "path": "/logout",
                "rules": {
                  "PUT": {
                    "description": "logout session",
                    "expression": "true"
                  }
                }
              },
              {
                "path": "/refresh",
                "rules": {
                  "PUT": {
                    "description": "refresh the JWT for the session found in the session cookie",
                    "expression": "bearer('ROOT_KEY')"
                  }
                }
              },
              {
                "path": "/users",
                "rules": {
                  "GET": {
                    "mustAuth": true,
                    "description": "get users requires root",
                    "expression": "bearer({{.ClientAppKeys}}) && root()"
                  },
                  "POST": {
                    "mustAuth": true,
                    "description": "create user requires root",
                    "expression": "bearer({{.ClientAppKeys}}) && root()"
                  }
                }
              },
              {
                "path": "/users/:id",
                "rules": {
                  "GET": {
                    "mustAuth": true,
                    "description": "get user requires root",
                    "expression": "bearer({{.ClientAppKeys}}) && root()"
                  },
                  "PUT": {
                    "mustAuth": true,
                    "description": "update user requires root",
                    "expression": "bearer({{.ClientAppKeys}}) && root()"
                  },
                  "DELETE": {
                    "mustAuth": true,
                    "description": "delete user requires root",
                    "expression": "bearer({{.ClientAppKeys}}) && root()"
                  }
                }
              },
              {
                "path": "/users/:id/password",
                "rules": {
                  "POST": {
                    "mustAuth": true,
                    "description": "change password requires root or authenticated matching user",
                    "expression": "bearer({{.ClientAppKeys}}) && (root() || user(param(':id')))"
                  }
                }
              },
              {
                "path": "/users/:id/set-password",
                "rules": {
                  "PUT": {
                    "description": "set password requires valid root user",
                    "expression": "bearer({{.ClientAppKeys}}) && root()"
                  }
                }
              },
              {
                "path": "/password-reset",
                "rules": {
                  "POST": {
                    "description": "initiate password reset requires client app",
                    "expression": "bearer({{.ClientAppKeys}})"
                  }
                }
              },
              {
                "path": "/password-reset/:token",
                "rules": {
                  "POST": {
                    "description": "execute password reset requires client app and reset token",
                    "expression": "bearer({{.ClientAppKeys}}) && reset(param(':token'))"
                  }
                }
              },
              {
                "path": "/sessions",
                "rules": {
                  "GET": {
                    "description": "get active sessions",
                    "expression": "bearer('ROOT_KEY')"
                  }
                }
              },
              {
                "path": "/session/:sid",
                "rules": {
                  "GET": {
                    "description": "get session for sid",
                    "expression": "bearer('ROOT_KEY')"
                  }
                }
              },
              {
                "path": "/blocks",
                "rules": {
                  "PUT": {
                    "description": "get tenant blocked users through access-apis",
                    "expression": "bearer('ROOT_KEY')"
                  }
                }
              },
              {
                "path": "/blocks/:sid",
                "rules": {
                  "PUT": {
                    "description": "execute a tenant block user through access-apis",
                    "expression": "bearer('ROOT_KEY')"
                  }
                }
              },
              {
                "path": "/blocks/:sid",
                "rules": {
                  "DELETE": {
                    "description": "remove a tenant block user through access-apis",
                    "expression": "bearer('ROOT_KEY')"
                  }
                }
              }
            ]
          }
        ]
      }
    ]
  }
}

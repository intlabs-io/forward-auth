SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [authz].[PATHS](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[GUID] [varchar](36) NOT NULL,
	[CheckID] [int] NOT NULL,
	[Path] [varchar](1024) NOT NULL,
	[Rules] [nvarchar](max) NOT NULL,
	[Created] [datetime] NOT NULL,
	[CreateUser] [varchar](36) NOT NULL,
	[Updated] [datetime] NOT NULL,
	[UpdateUser] [varchar](36) NOT NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
ALTER TABLE [authz].[PATHS] ADD PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
ALTER TABLE [authz].[PATHS] ADD  CONSTRAINT [UK_PATHS_Check_Path] UNIQUE NONCLUSTERED 
(
	[CheckID] ASC,
	[Path] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
CREATE NONCLUSTERED INDEX [IX_authz_PATHS_GUID] ON [authz].[PATHS]
(
	[GUID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
ALTER TABLE [authz].[PATHS] ADD  CONSTRAINT [DF_PATHS_GUID]  DEFAULT (newid()) FOR [GUID]
GO
ALTER TABLE [authz].[PATHS] ADD  CONSTRAINT [DF_PATHS_Created]  DEFAULT (getdate()) FOR [Created]
GO
ALTER TABLE [authz].[PATHS] ADD  CONSTRAINT [DF_PATHS_CreateUser]  DEFAULT ('ROOT') FOR [CreateUser]
GO
ALTER TABLE [authz].[PATHS] ADD  CONSTRAINT [DF_PATHS_Updated]  DEFAULT (getdate()) FOR [Updated]
GO
ALTER TABLE [authz].[PATHS] ADD  CONSTRAINT [DF_PATHS_UpdateUser]  DEFAULT ('ROOT') FOR [UpdateUser]
GO
ALTER TABLE [authz].[PATHS]  WITH CHECK ADD  CONSTRAINT [FK_PATHS_Check] FOREIGN KEY([CheckID])
REFERENCES [authz].[CHECKS] ([ID])
GO
ALTER TABLE [authz].[PATHS] CHECK CONSTRAINT [FK_PATHS_Check]
GO
ALTER TABLE [authz].[PATHS]  WITH CHECK ADD  CONSTRAINT [CK_PATHS_Rules_IsJSON] CHECK  ((isjson([Rules])=(1)))
GO
ALTER TABLE [authz].[PATHS] CHECK CONSTRAINT [CK_PATHS_Rules_IsJSON]
GO

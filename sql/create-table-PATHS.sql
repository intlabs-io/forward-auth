SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

DROP TABLE IF EXISTS [authz].[PATHS]
GO

CREATE TABLE [authz].[PATHS]
(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[GUID] [varchar](36) NOT NULL,
	[CheckID] [int] NOT NULL,
	[Rules] [nvarchar](max) NOT NULL,
	[Created] [datetime] NOT NULL,
	[CreateUser] [varchar](36) NOT NULL,
	[Updated] [datetime] NOT NULL,
	[UpdateUser] [varchar](36) NOT NULL,
) ON [PRIMARY]
GO
ALTER TABLE [authz].[PATHS] ADD PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
ALTER TABLE [authz].[PATHS] ADD CONSTRAINT [DF_PATHS_GUID] DEFAULT (newid()) FOR [GUID]
GO
ALTER TABLE [authz].[PATHS] ADD CONSTRAINT [DF_PATHS_Created] DEFAULT (getdate()) FOR [Created]
GO
ALTER TABLE [authz].[PATHS] ADD CONSTRAINT [DF_PATHS_CreateUser] DEFAULT ('ROOT') FOR [CreateUser]
GO
ALTER TABLE [authz].[PATHS] ADD CONSTRAINT [DF_PATHS_Updated] DEFAULT (getdate()) FOR [Updated]
GO
ALTER TABLE [authz].[PATHS] ADD CONSTRAINT [DF_PATHS_UpdateUser] DEFAULT ('ROOT') FOR [UpdateUser]
GO

ALTER TABLE [authz].[PATHS] WITH CHECK ADD CONSTRAINT [FK_PATHS_Check] FOREIGN KEY([CheckID])
REFERENCES [authz].[CHECKS] ([ID])
GO

ALTER TABLE [authz].[PATHS] WITH CHECK ADD CONSTRAINT [CK_PATHS_Rules_IsJSON] CHECK (ISJSON(Rules) > 0)
GO
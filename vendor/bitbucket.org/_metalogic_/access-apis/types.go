package acc

/*********************************************************************************************************
 * Response types are generated directly by database stored procedures/functions called by API endpoints.
 * Changes to stored procedures/functions should be reflected in updates to these types.
 *********************************************************************************************************/

type createUpdate struct {
	Created    string
	CreateUser string
	Updated    string
	UpdateUser string
}

// ** Generated by sql.DB.Stats() **
// ** Changes to these stored procedures should be reflected in an update to this type **
type dbStatsJSON struct {
	MaxOpenConnections int
	OpenConnections    int
	InUse              int
	Idle               int
	WaitCount          int64
	WaitDuration       int64
	MaxIdleClosed      int64
	MaxIdleTimeClosed  int64
	MaxLifetimeClosed  int64
}

// ** Generated directly by database stored procedures [auth].[GetInvitationsWithFilters], **
// ** [auth].[GetInvitation], [auth].[InviteUser], and [auth].[UpdateInvitation]    **
// ** Changes to these stored procedures should be reflected in an update to this type  **
type invitationResponse struct {
	Email  string
	Token  string
	Status string
	createUpdate
}

// ** Generated directly by database stored procedure [auth].[InviteUser] **
// ** Changes to these stored procedures should be reflected in an update to this type  **
type inviteUserResponse struct {
	UID    string
	Email  string
	Token  string
	Status string
	createUpdate
}

// ** Generated directly by database stored procedure [auth].[GetActions]     **
// ** Changes to these stored procedures should be reflected in an update to this type  **
type actionResponse struct {
	Code        string
	Description string
	createUpdate
}

// ** Generated directly by database stored procedure [auth].[GetCategory] and [auth].[GetCategories]     **
// ** Changes to these stored procedures should be reflected in an update to this type **
type categoryResponse struct {
	Code        string
	Description string
	createUpdate
}

// CategoryContext
type CategoryContextRequest struct {
	Code        string `json:"code"`
	Description string `json:"description"`
	Active      string `json:"active"`
}

type CategoryContextResponse struct {
	Code         string
	CategoryCode string
	Description  string
	Active       bool
	CreateUser   string
	Created      string
	UpdateUser   string
	Updated      string
}

// ** Generated directly by database stored procedure [auth].[ActivateUser],[auth].[GetUsersWithFilters], **
// ** [auth].[UpdateUser], and [auth].[GetUsersWithInstitutionRoles]    **
// ** Changes to these stored procedures should be reflected in an update to this type   **
type userResponse struct {
	GUID      string
	UserName  string
	FirstName string
	LastName  string
	Status    string
	Comment   string
	Root      bool
}

// ** Generated directly by database stored procedure [auth].[Login]    **
// ** Changes to these stored procedures should be reflected in an update to this type     **
type loginResponse struct {
	UID string
}

// ** Generated directly by database stored procedures [auth].[GetRole], [auth].[GetRoles],   **
// ** [auth].[CreateRoleForInstitution], [auth].[GetInstitutionRole], and [auth].UpdateRole  **
// ** Changes to these stored procedures should be reflected in an update to this type         **
type roleResponse struct {
	RoleGUID    string       `json:"guid"`
	TenantID    string       `json:"tenantID"`
	Name        string       `json:"name"`
	Description string       `json:"description"`
	Permission  []Permission `json:"perms"`
	createUpdate
}

// ** Generated directly by database stored procedure [auth].[GetUser]    **
// ** Changes to these stored procedures should be reflected in an update to this type **
type personResponse struct {
	UID        string
	Password   string
	UserName   string
	FirstName  string
	LastName   string
	Status     string
	Comment    string
	Root       bool
	Permission []Permission
	createUpdate
}

// ** Generated directly by database stored procedure [auth].[ChangePassword]    **
// ** Changes to these stored procedures should be reflected in an update to this type **
type changePasswordResponse struct {
	GUID     string
	UserName string
	createUpdate
}

// ** Generated directly by database stored procedure [auth].[GetUserRoles] and [auth].[AssignUserRole]   **
// ** Changes to these stored procedures should be reflected in an update to this type  **
type userRoleResponse struct {
	GUID        string
	TenantID    string
	Name        string
	Description string
}

// ** Generated directly by database stored procedure [auth].[GetUserInstitutionRoles] **
// ** Changes to these stored procedures should be reflected in an update to this type **
type userInstitutionRolesResponse struct {
	GUID      string
	UserName  string
	FirstName string
	LastName  string
	Status    string
	Root      bool
	UserRoles []userRoleResponse
	createUpdate
}

// ** Generated directly by database stored procedure [auth].[AddPermissionToRole] and [auth].[DeleteRolePermission]    **
// ** Changes to these stored procedures should be reflected in an update to this type  **
type addPermissionResponse struct {
	Role []struct {
		Message  string
		GUID     string
		TenantID string
		Name     string
	}

	Perms []Permission
}

type usersResponse struct {
	Total  int
	Offset int
	Count  int
	Next   int
	Data   []userResponse
}

type statusResponse struct {
	Code        string
	Description string
	createUpdate
}

// PublicKey Request...
type PublicKeyRequest struct {
	PublicKey string `json:"publicKey"`
}

// PublicKey Response
// ** Generated directly by database stored procedure [auth].[GetPublicKey]    **
// ** changes to [auth].[GetPublicKey] should be reflected in an update to this type **
type PublicKeyResponse struct {
	Name       string `json:"name"`
	TenantGUID string `json:"tenantGUID"`
	PublicKey  string `json:"publicKey"`
	createUpdate
}

// Registration Request
type RegistrationRequest struct {
	Email string `json:"email"`
	Name  string `json:"name"`
	Tel   string `json:"tel"`
	Note  string `json:"note"`
}

type UsersResponse struct {
	Total  int            `json:"total"`
	Offset int            `json:"offset"`
	Count  int            `json:"count"`
	Users  []UserResponse `json:"data"`
}

type UserResponse struct {
	TenantID  string     `json:"tid"`
	UserID    string     `json:"uid"`
	Email     string     `json:"email"`
	Superuser bool       `json:"superuser"`
	Status    string     `json:"status"`
	Comment   string     `json:"comment"`
	Profile   Profile    `json:"profile"`
	Contacts  []Contact  `json:"contacts"`
	Roles     []UserRole `json:"roles"`
	Meta      Meta       `json:"meta"`
}

type Meta struct {
	Created    string `json:"created"`
	CreateUser string `json:"createUser"`
	Updated    string `json:"updated,omitempty"`
	UpdateUser string `json:"updateUser,omitempty"`
}
